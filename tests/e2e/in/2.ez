//import("../library/docs");

let t = function {console.write(u);};

let out = console.getOutput(function {
    console.write("x");
});

console.writeLine(out);

let a;
let b;
a.good = true;

if (a.good) {
    console.writeLine("a is good");
}

if (!b.good) {
    console.writeLine("b is not good");
}

let c = "x";
let x = {
    c:"a"
};

class Myclass {
    constructor: function (a) {
        this.sth = a;
        console.writeLine("constructor");
    },
    writeSth: function { console.writeLine(this.sth); },
    destructor: function { console.writeLine("destructor" + this.sth); }
};

{
    let m <- Myclass(12);
    m.writeSth();
    m["sth"] = "_g";
    console.writeLine(m["sth"]);
    console.writeLine(m.sth);
    //console.writeLine(m.getId());
    m.writeSth();
}

console.writeLine(x.c);

let searchResult = "a a a".searchAll("a");
searchResult.forEach(function {
    console.writeLine(args[0].position, " ", args[0].length);
});

let arr = Array();
let i = 0;
while (i<1000) {
    let x = 5;
    arr.insert(0, x);
    i++;
}

console.writeLine(arr[999]);


let x;
let i = 0;
x.a <- Accessible({
    get: () => {console.writeLine("hello"); return i++;},
    set: (a) => {console.writeLine(a); return i;}
});
console.writeLine(x.a);
console.writeLine(x.a);
x.a = 7;