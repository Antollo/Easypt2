try
{
    throw "Exception";
} catch {
    console.error(exception);
}

class Myclass {
    constructor: function {
        this.sth = args[0];
        console.log("constructor");
    },
    writeSth: function { console.writeLine(this.sth); },
    destructor: function { console.log("destructor"); }
};

{
    let m = Myclass(12);
    m["zażółć"] = "gęślą";
    console.debug(m["zażółć"]);
    //console.debug(m.zażółć);
    console.debug(m.getId());
    m.writeSth();
}


let file = File();
file.open("test3.ez");
//let tr = transpile(file.readBytes(file.size()));

let x = function { console.debug(args[0]); };
x(5);
//console.writeLine(tr);


let p1 = Promise(function { console.log(1); });
let p2 = Promise(function { console.log(2); });
let p3 = Promise(function { console.log(3); });
let p4 = Promise(function { console.log(4); });
let p5 = Promise(function { console.log(5); });

console.log("start");
Object.condition = "one";
Timeout(7005).then(function { console.log(75); Object.condition = "two"; });

ConditionalPromise(function { console.log(Object.condition); }, function { return "one" == Object.condition; });
let a = console.readAsync().then( function{ console.log(args[0]); });
let b = console.readAsync().then( function{ console.log(args[0]); });
let c = console.readAsync().then( function{ console.log(args[0]); });
let d = console.readAsync().then( function{ console.log(args[0]); });
let e = console.readAsync().then( function{ console.log(args[0]); });

Timeout(100).then(function { console.log(20); });
