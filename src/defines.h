#define insertObject(NAME, ...) st->insert(NAME, object::makeObject(__VA_ARGS__))
#define insertClass(NAME) st->insert(NAME, object::makeObject(constructorCaller))
#define insertFunctionL(NAME, ...) st->insert(NAME, object::makeObject(static_cast<object::type::NativeFunction>([](object::objectPtr thisObj, object::type::Array && args, stack * st) -> object::objectPtr __VA_ARGS__)))
#define addFunctionL(NAME, ...) addProperty(NAME, object::makeObject(static_cast<object::type::NativeFunction>([](object::objectPtr thisObj, object::type::Array && args, stack * st) -> object::objectPtr __VA_ARGS__)))