#define insertObject(NAME, ...) st->insert(NAME, object::makeObject(__VA_ARGS__))
#define insertFunctionL(NAME, ...) st->insert(NAME, object::makeObject(static_cast<object::nativeFunctionType>([](object::objectPtr thisObj, object::arrayType && args, stack * st) -> object::objectPtr __VA_ARGS__)))
#define addFunctionL(OBJECTPTR, NAME, ...) OBJECTPTR->addProperty(NAME, object::makeObject(static_cast<object::nativeFunctionType>([](object::objectPtr thisObj, object::arrayType && args, stack * st) -> object::objectPtr __VA_ARGS__)))