function merge(left, right) {
    let array = [];
    let leftIndex = 0;
    let rightIndex = 0;
    while (leftIndex < left.length() && rightIndex < right.length())
        array.insert(array.length(),
            left[leftIndex] < right[rightIndex] ? left[leftIndex++ - 1] : right[rightIndex++ - 1]);
    return array
        .insertFrom(array.length(), left, leftIndex)
        .insertFrom(array.length(), right, rightIndex);
};

function mergeSort(array) {
    if (array.length() <= 1)
        return array;
    let pivot = (array.length() / 2).toInteger();
    return merge(mergeSort(array.subarray(0, pivot)), mergeSort(array.subarray(pivot)));
};


let file = File();
file.open("numbers.txt");
let line = file.readLine();
let array = [];
while (line.length() > 0) {
    array.insert(array.length(), line.toNumber());
    line = file.readLine();
}


let iterations = 100;
let mean = 0;
let time;


for (let i = 0; i < iterations; i++) {
    time = Time.sinceEpoch.asFloatingPoint();
    mergeSort(array);
    mean = mean + Time.sinceEpoch.asFloatingPoint() - time;
    console.write("\r--- ", (i / iterations * 100 + 1).toInteger(), "% ---");
}

mean = mean / iterations;
console.writeLine("\nMean time: ", mean, " ms");